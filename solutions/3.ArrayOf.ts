// Create a generic called ArrayOf that takes two arguments
// a value and a number N and returns an array of N items
// ArrayOf<"ğŸ˜…", 5> should be ["ğŸ˜…", "ğŸ˜…", "ğŸ˜…", "ğŸ˜…", "ğŸ˜…"]

type ArrayOf<Item, N, Result extends Item[] = []> = Result["length"] extends N
  ? Result
  : ArrayOf<Item, N, [...Result, Item]>;

type Smiles = ArrayOf<"ğŸ˜…", 5>;

export type { ArrayOf  };
